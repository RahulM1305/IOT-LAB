
//1
void setup()
{
  pinMode(7, OUTPUT);
}

void loop()
{
  digitalWrite(7, HIGH);
  delay(5000); // Wait for 1000 millisecond(s)
  digitalWrite(7, LOW);
  delay(5000); // Wait for 1000 millisecond(s)
}

![1](https://github.com/user-attachments/assets/3acb9b3d-2dc9-42d3-8da2-d7c778e697c8)



//2
#define LED_PIN 2
#define MICROSWITCH_PIN 5
void setup()
{
  pinMode(LED_PIN, OUTPUT);
  pinMode(MICROSWITCH_PIN, INPUT);
  Serial.begin(9600);
}

void loop()
{
  if(digitalRead(MICROSWITCH_PIN)==HIGH){
  	digitalWrite(LED_PIN, HIGH);
    Serial.println(1);
  }
  else{
    digitalWrite(LED_PIN, LOW);
    Serial.println(0);
  }
}

![2](https://github.com/user-attachments/assets/4ed654fd-ad65-452f-84db-8eb6a4cbdbbd)


//3

void setup()
{
  pinMode(2, OUTPUT);
  Serial.begin(9600);
  while(!Serial);
  Serial.println("Input 1 to TURN LED ON and 2 to OFF");
}

void loop()
{
  if(Serial.available()){
  	int state=Serial.parseInt();
    if(state==1){
      digitalWrite(2, HIGH);
      Serial.println("Command completed LED ON");
    }
    if(state==2){
      digitalWrite(2, LOW);
      Serial.println("Command completed LED OFF");
    }
  }
  
}

//4

int led=9;
int brightness=0;
int fadeAmount=5;
void setup()
{
  pinMode(led, OUTPUT);
  
}

void loop()
{
  analogWrite(led,brightness);
  brightness=brightness+fadeAmount;
  if(brightness==0|| brightness==125){
  	fadeAmount=-fadeAmount;
  }
  delay(200);
  
}


//5
int potPin=A0;
int gPin=9;
int potVal;
float LEDVal;
void setup()
{
  pinMode(potPin, INPUT);
  pinMode(gPin, OUTPUT);
  Serial.begin(9600);
  
}

void loop()
{
  potVal=analogRead(potPin);
  LEDVal=(255./1023.)*potVal;
  analogWrite(gPin,LEDVal);
  delay(500);
  Serial.println(LEDVal);
  
}


// 6

void setup()
{
  pinMode(5, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(7, OUTPUT);
}

void loop()
{
  digitalWrite(5, LOW);
  digitalWrite(6, LOW);
  digitalWrite(7, HIGH);
  delay(4500); 
  digitalWrite(5, LOW);
  digitalWrite(6, HIGH);
  digitalWrite(7, LOW);
  delay(2000); 
  digitalWrite(5, HIGH);
  digitalWrite(6, LOW);
  digitalWrite(7, LOW);
  delay(2800); 
}


//7
// C++ code
//
void setup()
{
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);
}

void loop()
{
  digitalWrite(2, HIGH);
  delay(1000); 
  //
  digitalWrite(2, LOW);
  digitalWrite(3, HIGH);
  delay(1000);
  digitalWrite(2, HIGH);
  digitalWrite(3, HIGH);
  delay(1000);
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  digitalWrite(4, HIGH);
  delay(1000); 
  digitalWrite(2, HIGH);
  digitalWrite(3, LOW);
  digitalWrite(4, HIGH);
  delay(1000);
  digitalWrite(2, LOW);
  digitalWrite(3, HIGH);
  digitalWrite(4, HIGH);
  delay(1000);
  digitalWrite(2, HIGH);
  digitalWrite(3, HIGH);
  digitalWrite(4, HIGH);
  delay(1000);
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  digitalWrite(4, LOW);
  digitalWrite(5, HIGH);
  delay(1000);
  digitalWrite(2, HIGH);
  digitalWrite(3, LOW);
  digitalWrite(4, LOW);
  digitalWrite(5, HIGH);
  delay(1000);
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  digitalWrite(4, LOW);
  digitalWrite(5, LOW);
  delay(1000);
  digitalWrite(2, HIGH);
  digitalWrite(3, LOW);
  digitalWrite(4, LOW);
  digitalWrite(5, HIGH);
  delay(1000);
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  digitalWrite(4, LOW);
  digitalWrite(5, HIGH);
  delay(1000);
  digitalWrite(2, HIGH);
  digitalWrite(3, HIGH);
  digitalWrite(4, HIGH);
  digitalWrite(5, LOW);
  delay(1000);
  digitalWrite(2, LOW);
  digitalWrite(3, HIGH);
  digitalWrite(4, HIGH);
  delay(1000); 
  digitalWrite(2, HIGH);
  digitalWrite(3, LOW);
  digitalWrite(4, HIGH);
  delay(1000);
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  digitalWrite(4, HIGH);
  delay(1000);
  digitalWrite(2, HIGH);
  digitalWrite(3, HIGH);
  digitalWrite(4, LOW);
  delay(1000);
  digitalWrite(2, LOW);
  digitalWrite(3, HIGH);
  delay(1000);
  digitalWrite(2, HIGH);
  digitalWrite(3, LOW);
  delay(1000);
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  digitalWrite(4, LOW);
  digitalWrite(5, LOW);
  delay(1000);
  
  
  
}


//Soil sensor 

int sensor_pin=A0;
void setup()
{
  pinMode(sensor_pin, INPUT);
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
}

void loop()
{
  int sensor_data=analogRead(sensor_pin);
  Serial.println(sensor_data);
  if(sensor_data>=1000){
  	digitalWrite(2, HIGH);
  	digitalWrite(3, LOW);
  	digitalWrite(4, LOW);
    Serial.println("No Moisture");
    delay(1000);
  }
  else if(sensor_data<=700 && sensor_data>=630 ){
  	digitalWrite(2, LOW);
  	digitalWrite(3, HIGH);
  	digitalWrite(4, LOW);
    Serial.println("There is some Moisture");
    delay(1000);
  }
  else if(sensor_data<=600 ){
  	digitalWrite(2, LOW);
  	digitalWrite(3, LOW);
  	digitalWrite(4, HIGH);
    Serial.println("Soil is wet");
    delay(1000);
  }
   
  
}

//8

void setup()
{
  Serial.begin(9600);
  pinMode(5, OUTPUT);
  pinMode(7, OUTPUT);
}

void loop()
{
  int v=analogRead(A0);
  Serial.println(v);
  delay(300);
  if(v<100){
    digitalWrite(7, LOW);
    digitalWrite(5, HIGH);
    delay(300);
    Serial.println("MOTION DETECTED");
    digitalWrite(5, LOW);
  }
  else{
    digitalWrite(7, HIGH);
    digitalWrite(5, LOW);
  }
    
  
 
}


//10
const int trigPin=6;
const int echoPin=5;
const int buzzer=2;
float new_delay;
long duration;
int distance;
void setup()
{
  Serial.begin(9600);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(buzzer, OUTPUT);
}

void loop()
{
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(12);
  digitalWrite(trigPin, LOW);
  duration=pulseIn(echoPin,HIGH);
  distance=duration*0.034/2;
  Serial.print("Distance:");
  new_delay=(distance*3)+30;
  Serial.print(distance);
  Serial.println("  cm");
  if(distance<50){
    digitalWrite(buzzer, HIGH);
    delay(new_delay);
    digitalWrite(buzzer, LOW);
  }
  else{
    digitalWrite(buzzer, LOW);
  }
  delay(200);
}


//11a
int smoke;

void setup(){
	pinMode(11, OUTPUT);
	pinMode(12, OUTPUT);
    Serial.begin(9600);
}

void loop(){
	smoke=analogRead(A0);
    Serial.println("SMOKE Sensor");
    Serial.println(smoke);
    delay(1000);
    if(smoke>250){
        digitalWrite(11, HIGH);
        digitalWrite(12, HIGH);
        delay(1000);
        digitalWrite(12, LOW);
        Serial.println("SMOKE DETECTED");
    }
    else{
        digitalWrite(11, HIGH);
        digitalWrite(12, LOW);
        Serial.println("SMOKE NOT DETECTED");
    }
}


//12
#include<Wire.h>
#include <DHT.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27,16,2);
#define DHTPIN 8
#define DHTTYPE DHT11
DHT dht(DHTPIN,DHTTYPE);

int h;
int t;



void setup() {
  Serial.begin(9600);
  Serial.println("Temp and hum sensor");
  dht.begin();
  lcd.init();
  lcd.backlight();
  
}

void loop() {
  h=dht.readHumidity();
  t=dht.readTemperature();

  Serial.print("Humidity:");
  Serial.print(h);
  Serial.print("%,TEMP:");
  Serial.print(t);
  Serial.print("C");

  lcd.setCursor(0,0);
  lcd.print("NOW TEMP");
  lcd.setCursor(0,1);
  lcd.print("T:");
  lcd.print(t);
  lcd.print(char(223));
  lcd.print("C");
  lcd.setCursor(6,1);
  lcd.print("2025");

  lcd.setCursor(11,1);
  lcd.print("H:");
  lcd.print(h);
  lcd.print("%");


  delay(1000);

}




